#!/bin/bash
    
function get_signature()
{
    option="$1";
    object="$2";
    if [[ -d "${object}" ]];then
        set_metadata "${option}" "${object}";
        result="$(sha1sum ${APP_CACHE}/${APP_NAME}.${option}.metadata)";
    elif [[ -f "${object}" ]];then
        result="$(sha1sum ${object})";
    else
        result="0";
    fi;
    echo "${result%% *}";
}
    
function set_metadata()
{
    option="$1";
    object="$2";
    if [[ -f "${APP_CACHE}/${APP_NAME}.${option}.metadata" ]];then
        rm "${APP_CACHE}/${APP_NAME}.${option}.metadata";
    fi;
    (
        cd "${object}";
        for i in *;do 
            sha1sum "$i"; 
        done;
    ) >> "${APP_CACHE}/${APP_NAME}.${option}.metadata";
    cd /opt;
}
    
function deploy_app()
{
    if [[ -d "${APP_LATEST}" ]];then
        cp -R ${APP_LATEST}/* ${APP_HOME};
    else
        cp -R ${APP_LATEST} ${APP_HOME};
    fi;
}
    
function update_app()
{
    echo "Ocie: App Updater: Deployed: [ ${SIG_LOCAL} ], Latest: [ ${SIG_UPDATE} ]";
    if [[ "${SIG_LOCAL}" == "${SIG_UPDATE}" ]];then
        echo "Ocie: App Updater: Application is up-to-date";
    else
        echo "Ocie: App Updater: Updating application";
        deploy_app;
    fi;
}
    
#Run
    
if [[ ! "${APP_UPDATE_PATH}" == "" ]];then
    if [[ "${APP_TYPE}" == "" ]] || [[ "${APP_NAME}" == "" ]];then
        echo "Ocie: App Updater: Required APP_NAME or APP_TYPE is not set";
        echo "Ocie: App Updater: APP_UPDATE is ENABLED, set APP_UPDATE=0 to bypass this function, terminating application";
        exit 22;
    else
        echo "Ocie: App Updater: APP_TYPE is ${APP_TYPE}";
        echo "Ocie: App Updater: Checking if deployment or update needed";
    fi;
    APP_HOME="/var/www/html";
    APP_LOCAL="/var/www/html";
    APP_LATEST="${APP_UPDATE_PATH}/${APP_NAME}";
    if [[ "${APP_TYPE}" == "tomcat" ]];then
        APP_HOME="${CATALINA_HOME}/webapps/";
        APP_LOCAL="${APP_HOME}${APP_NAME}.war";
        APP_LATEST="${APP_UPDATE_PATH}/${APP_NAME}.war";
    fi;
    if [[ ! -d "${APP_DATA}" ]]; then
        echo "Ocie: App Updater: Data directory for application does not exist, creating ${APP_DATA}";
        install -d -m 0770 -o ${APP_OWNER} -g ${APP_GROUP} ${APP_DATA};
    fi;
    # Deploy application
    SIG_LOCAL=$(get_signature "local" "${APP_LOCAL}");
    SIG_UPDATE=$(get_signature "update" "${APP_LATEST}");
    echo "Ocie: App Updater: Application data [ ${APP_DATA} ]";
    echo "Ocie: App Updater: Application owner [ ${APP_OWNER} ]";
    echo "Ocie: App Updater: Application group [ ${APP_GROUP} ]";
    if [[ "${SIG_LOCAL}" == "0" ]] && [[ "${SIG_UPDATE}" == "0" ]];then
        echo "Ocie: App Updater: Application IS NOT DEPLOYED, Application NOT FOUND in path [ ${APP_UPDATE_PATH} ]";
        exit 2;
    elif [[ "${SIG_LOCAL}" == "0" ]] && [[ "${SIG_UPDATE}" != "0" ]];then
        echo "Ocie: App Updater: Application IS NOT DEPLOYED, Application FOUND in path [ ${APP_UPDATE_PATH} ]";
        deploy_app;
    elif [[ "${SIG_LOCAL}" != "0" ]] && [[ "${SIG_UPDATE}" == "0" ]];then
        echo "Ocie: App Updater: Application IS DEPLOYED, Update NOT FOUND in path [ ${APP_UPDATE_PATH} ]";
        if [[ "${APP_UPDATE_STRICT}" == 1 ]];then
            echo "Ocie: App Updater: Strict update checks are ENABLED, terminating application";
            exit 2;
        fi;
    else
        echo "Ocie: App Updater: Checking if update is needed";
        update_app;
    fi;
fi;
