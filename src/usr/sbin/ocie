#!/bin/bash
set -ef;
    
function show_help()
{
    echo "OCIE System Config";
    echo
    echo "Syntax: ocie [--keys -size 2048 -subject localhost] [--dhparams -size 3072] [--timezone America] [--print]";
    echo
    echo "Parameters:";
    echo
    echo "--cacerts    Update CA Certificate Stores, certificates must have the .crt extension";
    echo "    Required:";
    echo "       -path <path> Path to import CA Certs from, prefixed with either [ url: | file:file ], default: env CA_PATH";
    echo "    Optional:";
    echo "       -os Import into operating system store, /etc/ssl, default: env CA_UPDATE_OS";
    echo "       -jvm Import into java store, default: env CA_UPDATE_JVM";
    echo "       -filter Filter to find CA cert files by, default: env CA_FILTER";
    echo
    echo "--dhparams    Generate new dhparams";
    echo "    Optional:";
    echo "      -size <size>, default: env DH_PARAM_SIZE";
    echo "      -name <name>, default: dhparams";
    echo "      -path <path>, default: /etc/ssl";
    echo
    echo "--keys    Creates new ssl private key and public certificate"
    echo "    Optional:";
    echo "       -size <size>, default: 2048";
    echo "       -name <name>, default: server";
    echo "       -path <path>, default: /etc/ssl";
    echo "       -subject <subject>, default: localhost";
    echo "       -valid <valid days>, default: 365";
    echo "       -tag <tag name>, default: default.keys";
    echo
    echo "--pkg    Add/Remove packages"
    echo "    Optional:";
    echo "       -base Add default packages";
    echo "       -upgrade  Update all packages";
    echo "       -add <package list> Add packages, comma seperated list";
    echo "       -remove <package list> Remove packages, comma seperated list";
    echo
    echo "--timezone    Set system timezone";
    echo "    Required:";
    echo "       -set <timezone> A valid timezone definition from zoneinfo";
    echo "    Optional:"
    echo "       -print Print system timezone";
    echo
    echo "--clean    Remove directories/files";
    echo "    Optional:";
    echo "       -base     Cleanup base image, default: false";
    echo "       -path     Path to search, default: /var/log";
    echo "       -pattern  Comma seperated list of patterns to search, default: *.log* *.log.xz";
    echo "       -dirs     Comma seperated list of directories to forcefully delete";
    echo
    echo "--print    Print system config";
    echo
    echo "--quiet    Silence output";
}
    
function get_environment()
{
    echo "Ocie: Environment";
    printf "%s" "$(</etc/environment)";
    echo
    echo "Ocie: Package Manifest";
    . ${OCIE_LIB}/pkg --print;
}
    
function format_args()
{
    local result=$(echo "$1" | sed -e 's/ -/ --/g');
    echo "${result}";
}
    
entries=();
silent=0;
    
for i in "$@";do
    shift
    case "$i" in
        '--pkg') 
            entries+=(["0"]="pkg $(format_args " $1")");;
        '--cacerts') 
            entries+=(["1"]="cacerts $(format_args " $1")");;
        '--dhparams') 
            entries+=(["2"]="dhparams $(format_args " $1")");;
        '--keys') 
            entries+=(["3"]="keys $(format_args " $1")");;
        '--timezone') 
            entries+=(["4"]="timezone $(format_args " $1")");;
        '--clean') 
            entries+=(["5"]="clean $(format_args " $1")");;
        '--print') 
            entries+=(["6"]="print");;
        '--quiet')
            silent=1;;
        '--help')
            show_help;;
        *);;
    esac;
done;
    
. ${OCIE_LIB}/include/utils;
    
cmds=$(<<< ${!entries[@]} tr ' ' '\n' | sort);
for key in $cmds;do
    entry="$(echo ${entries[$key]})";
    cmd="$(echo ${entry%% *})";
    params="$(echo ${entry#* })";
    if [[ -f "${OCIE_LIB}/${cmd}" ]];then
        #print_msg "Ocie: Executing [ ${cmd} ], with arguments: [ ${params} ]";
        #. ${OCIE_LIB}/${cmd} ${params} | print_msg
        echo "Ocie: Executing [ $cmd ], with arguments: [ ${params} ]";
        . ${OCIE_LIB}/${cmd} ${params}
    elif [[ "${cmd}" == "print" ]];then
        get_environment;
    else
        #print_msg "Ocie: Uknown option passed: [ ${cmd} ], use --help for more info";
        echo "Ocie: Uknown option passed: [ ${cmd} ], use --help for more info";
    fi;
done;
